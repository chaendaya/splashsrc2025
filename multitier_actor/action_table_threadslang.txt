0	(	Shift 4
0	-	Shift 3
0	[	Shift 17
0	begin	Shift 10
0	car	Shift 20
0	cdr	Shift 21
0	identifier	Shift 6
0	if	Shift 5
0	integer_number	Shift 2
0	let	Shift 7
0	letrec	Shift 8
0	mutex	Shift 14
0	null?	Shift 19
0	print	Shift 22
0	proc	Shift 9
0	set	Shift 11
0	signal	Shift 16
0	spawn	Shift 12
0	wait	Shift 15
0	yield	Shift 13
0	zero?	Shift 18
1	$	Accept
2	(	Reduce 1
2	)	Reduce 1
2	,	Reduce 1
2	-	Reduce 1
2	;	Reduce 1
2	[	Reduce 1
2	begin	Reduce 1
2	car	Reduce 1
2	cdr	Reduce 1
2	else	Reduce 1
2	end	Reduce 1
2	identifier	Reduce 1
2	if	Reduce 1
2	in	Reduce 1
2	integer_number	Reduce 1
2	let	Reduce 1
2	letrec	Reduce 1
2	mutex	Reduce 1
2	null?	Reduce 1
2	print	Reduce 1
2	proc	Reduce 1
2	set	Reduce 1
2	signal	Reduce 1
2	spawn	Reduce 1
2	then	Reduce 1
2	wait	Reduce 1
2	yield	Reduce 1
2	zero?	Reduce 1
2	$	Reduce 1
3	(	Shift 24
3	integer_number	Shift 23
4	(	Shift 4
4	-	Shift 3
4	[	Shift 17
4	begin	Shift 10
4	car	Shift 20
4	cdr	Shift 21
4	identifier	Shift 6
4	if	Shift 5
4	integer_number	Shift 2
4	let	Shift 7
4	letrec	Shift 8
4	mutex	Shift 14
4	null?	Shift 19
4	print	Shift 22
4	proc	Shift 9
4	set	Shift 11
4	signal	Shift 16
4	spawn	Shift 12
4	wait	Shift 15
4	yield	Shift 13
4	zero?	Shift 18
5	(	Shift 4
5	-	Shift 3
5	[	Shift 17
5	begin	Shift 10
5	car	Shift 20
5	cdr	Shift 21
5	identifier	Shift 6
5	if	Shift 5
5	integer_number	Shift 2
5	let	Shift 7
5	letrec	Shift 8
5	mutex	Shift 14
5	null?	Shift 19
5	print	Shift 22
5	proc	Shift 9
5	set	Shift 11
5	signal	Shift 16
5	spawn	Shift 12
5	wait	Shift 15
5	yield	Shift 13
5	zero?	Shift 18
6	(	Reduce 5
6	)	Reduce 5
6	,	Reduce 5
6	-	Reduce 5
6	;	Reduce 5
6	[	Reduce 5
6	begin	Reduce 5
6	car	Reduce 5
6	cdr	Reduce 5
6	else	Reduce 5
6	end	Reduce 5
6	identifier	Reduce 5
6	if	Reduce 5
6	in	Reduce 5
6	integer_number	Reduce 5
6	let	Reduce 5
6	letrec	Reduce 5
6	mutex	Reduce 5
6	null?	Reduce 5
6	print	Reduce 5
6	proc	Reduce 5
6	set	Reduce 5
6	signal	Reduce 5
6	spawn	Reduce 5
6	then	Reduce 5
6	wait	Reduce 5
6	yield	Reduce 5
6	zero?	Reduce 5
6	$	Reduce 5
7	identifier	Shift 27
8	identifier	Shift 29
9	(	Shift 30
10	(	Shift 4
10	-	Shift 3
10	[	Shift 17
10	begin	Shift 10
10	car	Shift 20
10	cdr	Shift 21
10	identifier	Shift 6
10	if	Shift 5
10	integer_number	Shift 2
10	let	Shift 7
10	letrec	Shift 8
10	mutex	Shift 14
10	null?	Shift 19
10	print	Shift 22
10	proc	Shift 9
10	set	Shift 11
10	signal	Shift 16
10	spawn	Shift 12
10	wait	Shift 15
10	yield	Shift 13
10	zero?	Shift 18
11	identifier	Shift 33
12	(	Shift 34
13	(	Shift 35
14	(	Shift 36
15	(	Shift 37
16	(	Shift 38
17	integer_number	Shift 40
18	(	Shift 41
19	(	Shift 42
20	(	Shift 43
21	(	Shift 44
22	(	Shift 45
23	(	Reduce 2
23	)	Reduce 2
23	,	Reduce 2
23	-	Reduce 2
23	;	Reduce 2
23	[	Reduce 2
23	begin	Reduce 2
23	car	Reduce 2
23	cdr	Reduce 2
23	else	Reduce 2
23	end	Reduce 2
23	identifier	Reduce 2
23	if	Reduce 2
23	in	Reduce 2
23	integer_number	Reduce 2
23	let	Reduce 2
23	letrec	Reduce 2
23	mutex	Reduce 2
23	null?	Reduce 2
23	print	Reduce 2
23	proc	Reduce 2
23	set	Reduce 2
23	signal	Reduce 2
23	spawn	Reduce 2
23	then	Reduce 2
23	wait	Reduce 2
23	yield	Reduce 2
23	zero?	Reduce 2
23	$	Reduce 2
24	(	Shift 4
24	-	Shift 3
24	[	Shift 17
24	begin	Shift 10
24	car	Shift 20
24	cdr	Shift 21
24	identifier	Shift 6
24	if	Shift 5
24	integer_number	Shift 2
24	let	Shift 7
24	letrec	Shift 8
24	mutex	Shift 14
24	null?	Shift 19
24	print	Shift 22
24	proc	Shift 9
24	set	Shift 11
24	signal	Shift 16
24	spawn	Shift 12
24	wait	Shift 15
24	yield	Shift 13
24	zero?	Shift 18
25	(	Shift 4
25	-	Shift 3
25	[	Shift 17
25	begin	Shift 10
25	car	Shift 20
25	cdr	Shift 21
25	identifier	Shift 6
25	if	Shift 5
25	integer_number	Shift 2
25	let	Shift 7
25	letrec	Shift 8
25	mutex	Shift 14
25	null?	Shift 19
25	print	Shift 22
25	proc	Shift 9
25	set	Shift 11
25	signal	Shift 16
25	spawn	Shift 12
25	wait	Shift 15
25	yield	Shift 13
25	zero?	Shift 18
26	then	Shift 48
27	=	Shift 49
28	in	Shift 50
29	(	Shift 51
30	identifier	Shift 52
31	;	Shift 53
31	end	Reduce 13
32	end	Shift 54
33	=	Shift 55
34	(	Shift 4
34	-	Shift 3
34	[	Shift 17
34	begin	Shift 10
34	car	Shift 20
34	cdr	Shift 21
34	identifier	Shift 6
34	if	Shift 5
34	integer_number	Shift 2
34	let	Shift 7
34	letrec	Shift 8
34	mutex	Shift 14
34	null?	Shift 19
34	print	Shift 22
34	proc	Shift 9
34	set	Shift 11
34	signal	Shift 16
34	spawn	Shift 12
34	wait	Shift 15
34	yield	Shift 13
34	zero?	Shift 18
35	)	Shift 57
36	)	Shift 58
37	(	Shift 4
37	-	Shift 3
37	[	Shift 17
37	begin	Shift 10
37	car	Shift 20
37	cdr	Shift 21
37	identifier	Shift 6
37	if	Shift 5
37	integer_number	Shift 2
37	let	Shift 7
37	letrec	Shift 8
37	mutex	Shift 14
37	null?	Shift 19
37	print	Shift 22
37	proc	Shift 9
37	set	Shift 11
37	signal	Shift 16
37	spawn	Shift 12
37	wait	Shift 15
37	yield	Shift 13
37	zero?	Shift 18
38	(	Shift 4
38	-	Shift 3
38	[	Shift 17
38	begin	Shift 10
38	car	Shift 20
38	cdr	Shift 21
38	identifier	Shift 6
38	if	Shift 5
38	integer_number	Shift 2
38	let	Shift 7
38	letrec	Shift 8
38	mutex	Shift 14
38	null?	Shift 19
38	print	Shift 22
38	proc	Shift 9
38	set	Shift 11
38	signal	Shift 16
38	spawn	Shift 12
38	wait	Shift 15
38	yield	Shift 13
38	zero?	Shift 18
39	]	Shift 61
40	,	Shift 62
40	]	Reduce 22
41	(	Shift 4
41	-	Shift 3
41	[	Shift 17
41	begin	Shift 10
41	car	Shift 20
41	cdr	Shift 21
41	identifier	Shift 6
41	if	Shift 5
41	integer_number	Shift 2
41	let	Shift 7
41	letrec	Shift 8
41	mutex	Shift 14
41	null?	Shift 19
41	print	Shift 22
41	proc	Shift 9
41	set	Shift 11
41	signal	Shift 16
41	spawn	Shift 12
41	wait	Shift 15
41	yield	Shift 13
41	zero?	Shift 18
42	(	Shift 4
42	-	Shift 3
42	[	Shift 17
42	begin	Shift 10
42	car	Shift 20
42	cdr	Shift 21
42	identifier	Shift 6
42	if	Shift 5
42	integer_number	Shift 2
42	let	Shift 7
42	letrec	Shift 8
42	mutex	Shift 14
42	null?	Shift 19
42	print	Shift 22
42	proc	Shift 9
42	set	Shift 11
42	signal	Shift 16
42	spawn	Shift 12
42	wait	Shift 15
42	yield	Shift 13
42	zero?	Shift 18
43	(	Shift 4
43	-	Shift 3
43	[	Shift 17
43	begin	Shift 10
43	car	Shift 20
43	cdr	Shift 21
43	identifier	Shift 6
43	if	Shift 5
43	integer_number	Shift 2
43	let	Shift 7
43	letrec	Shift 8
43	mutex	Shift 14
43	null?	Shift 19
43	print	Shift 22
43	proc	Shift 9
43	set	Shift 11
43	signal	Shift 16
43	spawn	Shift 12
43	wait	Shift 15
43	yield	Shift 13
43	zero?	Shift 18
44	(	Shift 4
44	-	Shift 3
44	[	Shift 17
44	begin	Shift 10
44	car	Shift 20
44	cdr	Shift 21
44	identifier	Shift 6
44	if	Shift 5
44	integer_number	Shift 2
44	let	Shift 7
44	letrec	Shift 8
44	mutex	Shift 14
44	null?	Shift 19
44	print	Shift 22
44	proc	Shift 9
44	set	Shift 11
44	signal	Shift 16
44	spawn	Shift 12
44	wait	Shift 15
44	yield	Shift 13
44	zero?	Shift 18
45	(	Shift 4
45	-	Shift 3
45	[	Shift 17
45	begin	Shift 10
45	car	Shift 20
45	cdr	Shift 21
45	identifier	Shift 6
45	if	Shift 5
45	integer_number	Shift 2
45	let	Shift 7
45	letrec	Shift 8
45	mutex	Shift 14
45	null?	Shift 19
45	print	Shift 22
45	proc	Shift 9
45	set	Shift 11
45	signal	Shift 16
45	spawn	Shift 12
45	wait	Shift 15
45	yield	Shift 13
45	zero?	Shift 18
46	,	Shift 68
47	)	Shift 69
48	(	Shift 4
48	-	Shift 3
48	[	Shift 17
48	begin	Shift 10
48	car	Shift 20
48	cdr	Shift 21
48	identifier	Shift 6
48	if	Shift 5
48	integer_number	Shift 2
48	let	Shift 7
48	letrec	Shift 8
48	mutex	Shift 14
48	null?	Shift 19
48	print	Shift 22
48	proc	Shift 9
48	set	Shift 11
48	signal	Shift 16
48	spawn	Shift 12
48	wait	Shift 15
48	yield	Shift 13
48	zero?	Shift 18
49	(	Shift 4
49	-	Shift 3
49	[	Shift 17
49	begin	Shift 10
49	car	Shift 20
49	cdr	Shift 21
49	identifier	Shift 6
49	if	Shift 5
49	integer_number	Shift 2
49	let	Shift 7
49	letrec	Shift 8
49	mutex	Shift 14
49	null?	Shift 19
49	print	Shift 22
49	proc	Shift 9
49	set	Shift 11
49	signal	Shift 16
49	spawn	Shift 12
49	wait	Shift 15
49	yield	Shift 13
49	zero?	Shift 18
50	(	Shift 4
50	-	Shift 3
50	[	Shift 17
50	begin	Shift 10
50	car	Shift 20
50	cdr	Shift 21
50	identifier	Shift 6
50	if	Shift 5
50	integer_number	Shift 2
50	let	Shift 7
50	letrec	Shift 8
50	mutex	Shift 14
50	null?	Shift 19
50	print	Shift 22
50	proc	Shift 9
50	set	Shift 11
50	signal	Shift 16
50	spawn	Shift 12
50	wait	Shift 15
50	yield	Shift 13
50	zero?	Shift 18
51	identifier	Shift 73
52	)	Shift 74
53	(	Shift 4
53	-	Shift 3
53	[	Shift 17
53	begin	Shift 10
53	car	Shift 20
53	cdr	Shift 21
53	identifier	Shift 6
53	if	Shift 5
53	integer_number	Shift 2
53	let	Shift 7
53	letrec	Shift 8
53	mutex	Shift 14
53	null?	Shift 19
53	print	Shift 22
53	proc	Shift 9
53	set	Shift 11
53	signal	Shift 16
53	spawn	Shift 12
53	wait	Shift 15
53	yield	Shift 13
53	zero?	Shift 18
54	(	Reduce 12
54	)	Reduce 12
54	,	Reduce 12
54	-	Reduce 12
54	;	Reduce 12
54	[	Reduce 12
54	begin	Reduce 12
54	car	Reduce 12
54	cdr	Reduce 12
54	else	Reduce 12
54	end	Reduce 12
54	identifier	Reduce 12
54	if	Reduce 12
54	in	Reduce 12
54	integer_number	Reduce 12
54	let	Reduce 12
54	letrec	Reduce 12
54	mutex	Reduce 12
54	null?	Reduce 12
54	print	Reduce 12
54	proc	Reduce 12
54	set	Reduce 12
54	signal	Reduce 12
54	spawn	Reduce 12
54	then	Reduce 12
54	wait	Reduce 12
54	yield	Reduce 12
54	zero?	Reduce 12
54	$	Reduce 12
55	(	Shift 4
55	-	Shift 3
55	[	Shift 17
55	begin	Shift 10
55	car	Shift 20
55	cdr	Shift 21
55	identifier	Shift 6
55	if	Shift 5
55	integer_number	Shift 2
55	let	Shift 7
55	letrec	Shift 8
55	mutex	Shift 14
55	null?	Shift 19
55	print	Shift 22
55	proc	Shift 9
55	set	Shift 11
55	signal	Shift 16
55	spawn	Shift 12
55	wait	Shift 15
55	yield	Shift 13
55	zero?	Shift 18
56	)	Shift 77
57	(	Reduce 17
57	)	Reduce 17
57	,	Reduce 17
57	-	Reduce 17
57	;	Reduce 17
57	[	Reduce 17
57	begin	Reduce 17
57	car	Reduce 17
57	cdr	Reduce 17
57	else	Reduce 17
57	end	Reduce 17
57	identifier	Reduce 17
57	if	Reduce 17
57	in	Reduce 17
57	integer_number	Reduce 17
57	let	Reduce 17
57	letrec	Reduce 17
57	mutex	Reduce 17
57	null?	Reduce 17
57	print	Reduce 17
57	proc	Reduce 17
57	set	Reduce 17
57	signal	Reduce 17
57	spawn	Reduce 17
57	then	Reduce 17
57	wait	Reduce 17
57	yield	Reduce 17
57	zero?	Reduce 17
57	$	Reduce 17
58	(	Reduce 18
58	)	Reduce 18
58	,	Reduce 18
58	-	Reduce 18
58	;	Reduce 18
58	[	Reduce 18
58	begin	Reduce 18
58	car	Reduce 18
58	cdr	Reduce 18
58	else	Reduce 18
58	end	Reduce 18
58	identifier	Reduce 18
58	if	Reduce 18
58	in	Reduce 18
58	integer_number	Reduce 18
58	let	Reduce 18
58	letrec	Reduce 18
58	mutex	Reduce 18
58	null?	Reduce 18
58	print	Reduce 18
58	proc	Reduce 18
58	set	Reduce 18
58	signal	Reduce 18
58	spawn	Reduce 18
58	then	Reduce 18
58	wait	Reduce 18
58	yield	Reduce 18
58	zero?	Reduce 18
58	$	Reduce 18
59	)	Shift 78
60	)	Shift 79
61	(	Reduce 21
61	)	Reduce 21
61	,	Reduce 21
61	-	Reduce 21
61	;	Reduce 21
61	[	Reduce 21
61	begin	Reduce 21
61	car	Reduce 21
61	cdr	Reduce 21
61	else	Reduce 21
61	end	Reduce 21
61	identifier	Reduce 21
61	if	Reduce 21
61	in	Reduce 21
61	integer_number	Reduce 21
61	let	Reduce 21
61	letrec	Reduce 21
61	mutex	Reduce 21
61	null?	Reduce 21
61	print	Reduce 21
61	proc	Reduce 21
61	set	Reduce 21
61	signal	Reduce 21
61	spawn	Reduce 21
61	then	Reduce 21
61	wait	Reduce 21
61	yield	Reduce 21
61	zero?	Reduce 21
61	$	Reduce 21
62	integer_number	Shift 40
63	)	Shift 81
64	)	Shift 82
65	)	Shift 83
66	)	Shift 84
67	)	Shift 85
68	(	Shift 4
68	-	Shift 3
68	[	Shift 17
68	begin	Shift 10
68	car	Shift 20
68	cdr	Shift 21
68	identifier	Shift 6
68	if	Shift 5
68	integer_number	Shift 2
68	let	Shift 7
68	letrec	Shift 8
68	mutex	Shift 14
68	null?	Shift 19
68	print	Shift 22
68	proc	Shift 9
68	set	Shift 11
68	signal	Shift 16
68	spawn	Shift 12
68	wait	Shift 15
68	yield	Shift 13
68	zero?	Shift 18
69	(	Reduce 11
69	)	Reduce 11
69	,	Reduce 11
69	-	Reduce 11
69	;	Reduce 11
69	[	Reduce 11
69	begin	Reduce 11
69	car	Reduce 11
69	cdr	Reduce 11
69	else	Reduce 11
69	end	Reduce 11
69	identifier	Reduce 11
69	if	Reduce 11
69	in	Reduce 11
69	integer_number	Reduce 11
69	let	Reduce 11
69	letrec	Reduce 11
69	mutex	Reduce 11
69	null?	Reduce 11
69	print	Reduce 11
69	proc	Reduce 11
69	set	Reduce 11
69	signal	Reduce 11
69	spawn	Reduce 11
69	then	Reduce 11
69	wait	Reduce 11
69	yield	Reduce 11
69	zero?	Reduce 11
69	$	Reduce 11
70	else	Shift 87
71	in	Shift 88
72	(	Reduce 7
72	)	Reduce 7
72	,	Reduce 7
72	-	Reduce 7
72	;	Reduce 7
72	[	Reduce 7
72	begin	Reduce 7
72	car	Reduce 7
72	cdr	Reduce 7
72	else	Reduce 7
72	end	Reduce 7
72	identifier	Reduce 7
72	if	Reduce 7
72	in	Reduce 7
72	integer_number	Reduce 7
72	let	Reduce 7
72	letrec	Reduce 7
72	mutex	Reduce 7
72	null?	Reduce 7
72	print	Reduce 7
72	proc	Reduce 7
72	set	Reduce 7
72	signal	Reduce 7
72	spawn	Reduce 7
72	then	Reduce 7
72	wait	Reduce 7
72	yield	Reduce 7
72	zero?	Reduce 7
72	$	Reduce 7
73	)	Shift 89
74	(	Shift 4
74	-	Shift 3
74	[	Shift 17
74	begin	Shift 10
74	car	Shift 20
74	cdr	Shift 21
74	identifier	Shift 6
74	if	Shift 5
74	integer_number	Shift 2
74	let	Shift 7
74	letrec	Shift 8
74	mutex	Shift 14
74	null?	Shift 19
74	print	Shift 22
74	proc	Shift 9
74	set	Shift 11
74	signal	Shift 16
74	spawn	Shift 12
74	wait	Shift 15
74	yield	Shift 13
74	zero?	Shift 18
75	end	Reduce 14
76	(	Reduce 15
76	)	Reduce 15
76	,	Reduce 15
76	-	Reduce 15
76	;	Reduce 15
76	[	Reduce 15
76	begin	Reduce 15
76	car	Reduce 15
76	cdr	Reduce 15
76	else	Reduce 15
76	end	Reduce 15
76	identifier	Reduce 15
76	if	Reduce 15
76	in	Reduce 15
76	integer_number	Reduce 15
76	let	Reduce 15
76	letrec	Reduce 15
76	mutex	Reduce 15
76	null?	Reduce 15
76	print	Reduce 15
76	proc	Reduce 15
76	set	Reduce 15
76	signal	Reduce 15
76	spawn	Reduce 15
76	then	Reduce 15
76	wait	Reduce 15
76	yield	Reduce 15
76	zero?	Reduce 15
76	$	Reduce 15
77	(	Reduce 16
77	)	Reduce 16
77	,	Reduce 16
77	-	Reduce 16
77	;	Reduce 16
77	[	Reduce 16
77	begin	Reduce 16
77	car	Reduce 16
77	cdr	Reduce 16
77	else	Reduce 16
77	end	Reduce 16
77	identifier	Reduce 16
77	if	Reduce 16
77	in	Reduce 16
77	integer_number	Reduce 16
77	let	Reduce 16
77	letrec	Reduce 16
77	mutex	Reduce 16
77	null?	Reduce 16
77	print	Reduce 16
77	proc	Reduce 16
77	set	Reduce 16
77	signal	Reduce 16
77	spawn	Reduce 16
77	then	Reduce 16
77	wait	Reduce 16
77	yield	Reduce 16
77	zero?	Reduce 16
77	$	Reduce 16
78	(	Reduce 19
78	)	Reduce 19
78	,	Reduce 19
78	-	Reduce 19
78	;	Reduce 19
78	[	Reduce 19
78	begin	Reduce 19
78	car	Reduce 19
78	cdr	Reduce 19
78	else	Reduce 19
78	end	Reduce 19
78	identifier	Reduce 19
78	if	Reduce 19
78	in	Reduce 19
78	integer_number	Reduce 19
78	let	Reduce 19
78	letrec	Reduce 19
78	mutex	Reduce 19
78	null?	Reduce 19
78	print	Reduce 19
78	proc	Reduce 19
78	set	Reduce 19
78	signal	Reduce 19
78	spawn	Reduce 19
78	then	Reduce 19
78	wait	Reduce 19
78	yield	Reduce 19
78	zero?	Reduce 19
78	$	Reduce 19
79	(	Reduce 20
79	)	Reduce 20
79	,	Reduce 20
79	-	Reduce 20
79	;	Reduce 20
79	[	Reduce 20
79	begin	Reduce 20
79	car	Reduce 20
79	cdr	Reduce 20
79	else	Reduce 20
79	end	Reduce 20
79	identifier	Reduce 20
79	if	Reduce 20
79	in	Reduce 20
79	integer_number	Reduce 20
79	let	Reduce 20
79	letrec	Reduce 20
79	mutex	Reduce 20
79	null?	Reduce 20
79	print	Reduce 20
79	proc	Reduce 20
79	set	Reduce 20
79	signal	Reduce 20
79	spawn	Reduce 20
79	then	Reduce 20
79	wait	Reduce 20
79	yield	Reduce 20
79	zero?	Reduce 20
79	$	Reduce 20
80	]	Reduce 23
81	(	Reduce 24
81	)	Reduce 24
81	,	Reduce 24
81	-	Reduce 24
81	;	Reduce 24
81	[	Reduce 24
81	begin	Reduce 24
81	car	Reduce 24
81	cdr	Reduce 24
81	else	Reduce 24
81	end	Reduce 24
81	identifier	Reduce 24
81	if	Reduce 24
81	in	Reduce 24
81	integer_number	Reduce 24
81	let	Reduce 24
81	letrec	Reduce 24
81	mutex	Reduce 24
81	null?	Reduce 24
81	print	Reduce 24
81	proc	Reduce 24
81	set	Reduce 24
81	signal	Reduce 24
81	spawn	Reduce 24
81	then	Reduce 24
81	wait	Reduce 24
81	yield	Reduce 24
81	zero?	Reduce 24
81	$	Reduce 24
82	(	Reduce 25
82	)	Reduce 25
82	,	Reduce 25
82	-	Reduce 25
82	;	Reduce 25
82	[	Reduce 25
82	begin	Reduce 25
82	car	Reduce 25
82	cdr	Reduce 25
82	else	Reduce 25
82	end	Reduce 25
82	identifier	Reduce 25
82	if	Reduce 25
82	in	Reduce 25
82	integer_number	Reduce 25
82	let	Reduce 25
82	letrec	Reduce 25
82	mutex	Reduce 25
82	null?	Reduce 25
82	print	Reduce 25
82	proc	Reduce 25
82	set	Reduce 25
82	signal	Reduce 25
82	spawn	Reduce 25
82	then	Reduce 25
82	wait	Reduce 25
82	yield	Reduce 25
82	zero?	Reduce 25
82	$	Reduce 25
83	(	Reduce 26
83	)	Reduce 26
83	,	Reduce 26
83	-	Reduce 26
83	;	Reduce 26
83	[	Reduce 26
83	begin	Reduce 26
83	car	Reduce 26
83	cdr	Reduce 26
83	else	Reduce 26
83	end	Reduce 26
83	identifier	Reduce 26
83	if	Reduce 26
83	in	Reduce 26
83	integer_number	Reduce 26
83	let	Reduce 26
83	letrec	Reduce 26
83	mutex	Reduce 26
83	null?	Reduce 26
83	print	Reduce 26
83	proc	Reduce 26
83	set	Reduce 26
83	signal	Reduce 26
83	spawn	Reduce 26
83	then	Reduce 26
83	wait	Reduce 26
83	yield	Reduce 26
83	zero?	Reduce 26
83	$	Reduce 26
84	(	Reduce 27
84	)	Reduce 27
84	,	Reduce 27
84	-	Reduce 27
84	;	Reduce 27
84	[	Reduce 27
84	begin	Reduce 27
84	car	Reduce 27
84	cdr	Reduce 27
84	else	Reduce 27
84	end	Reduce 27
84	identifier	Reduce 27
84	if	Reduce 27
84	in	Reduce 27
84	integer_number	Reduce 27
84	let	Reduce 27
84	letrec	Reduce 27
84	mutex	Reduce 27
84	null?	Reduce 27
84	print	Reduce 27
84	proc	Reduce 27
84	set	Reduce 27
84	signal	Reduce 27
84	spawn	Reduce 27
84	then	Reduce 27
84	wait	Reduce 27
84	yield	Reduce 27
84	zero?	Reduce 27
84	$	Reduce 27
85	(	Reduce 28
85	)	Reduce 28
85	,	Reduce 28
85	-	Reduce 28
85	;	Reduce 28
85	[	Reduce 28
85	begin	Reduce 28
85	car	Reduce 28
85	cdr	Reduce 28
85	else	Reduce 28
85	end	Reduce 28
85	identifier	Reduce 28
85	if	Reduce 28
85	in	Reduce 28
85	integer_number	Reduce 28
85	let	Reduce 28
85	letrec	Reduce 28
85	mutex	Reduce 28
85	null?	Reduce 28
85	print	Reduce 28
85	proc	Reduce 28
85	set	Reduce 28
85	signal	Reduce 28
85	spawn	Reduce 28
85	then	Reduce 28
85	wait	Reduce 28
85	yield	Reduce 28
85	zero?	Reduce 28
85	$	Reduce 28
86	)	Shift 91
87	(	Shift 4
87	-	Shift 3
87	[	Shift 17
87	begin	Shift 10
87	car	Shift 20
87	cdr	Shift 21
87	identifier	Shift 6
87	if	Shift 5
87	integer_number	Shift 2
87	let	Shift 7
87	letrec	Shift 8
87	mutex	Shift 14
87	null?	Shift 19
87	print	Shift 22
87	proc	Shift 9
87	set	Shift 11
87	signal	Shift 16
87	spawn	Shift 12
87	wait	Shift 15
87	yield	Shift 13
87	zero?	Shift 18
88	(	Shift 4
88	-	Shift 3
88	[	Shift 17
88	begin	Shift 10
88	car	Shift 20
88	cdr	Shift 21
88	identifier	Shift 6
88	if	Shift 5
88	integer_number	Shift 2
88	let	Shift 7
88	letrec	Shift 8
88	mutex	Shift 14
88	null?	Shift 19
88	print	Shift 22
88	proc	Shift 9
88	set	Shift 11
88	signal	Shift 16
88	spawn	Shift 12
88	wait	Shift 15
88	yield	Shift 13
88	zero?	Shift 18
89	=	Shift 94
90	(	Reduce 10
90	)	Reduce 10
90	,	Reduce 10
90	-	Reduce 10
90	;	Reduce 10
90	[	Reduce 10
90	begin	Reduce 10
90	car	Reduce 10
90	cdr	Reduce 10
90	else	Reduce 10
90	end	Reduce 10
90	identifier	Reduce 10
90	if	Reduce 10
90	in	Reduce 10
90	integer_number	Reduce 10
90	let	Reduce 10
90	letrec	Reduce 10
90	mutex	Reduce 10
90	null?	Reduce 10
90	print	Reduce 10
90	proc	Reduce 10
90	set	Reduce 10
90	signal	Reduce 10
90	spawn	Reduce 10
90	then	Reduce 10
90	wait	Reduce 10
90	yield	Reduce 10
90	zero?	Reduce 10
90	$	Reduce 10
91	(	Reduce 3
91	)	Reduce 3
91	,	Reduce 3
91	-	Reduce 3
91	;	Reduce 3
91	[	Reduce 3
91	begin	Reduce 3
91	car	Reduce 3
91	cdr	Reduce 3
91	else	Reduce 3
91	end	Reduce 3
91	identifier	Reduce 3
91	if	Reduce 3
91	in	Reduce 3
91	integer_number	Reduce 3
91	let	Reduce 3
91	letrec	Reduce 3
91	mutex	Reduce 3
91	null?	Reduce 3
91	print	Reduce 3
91	proc	Reduce 3
91	set	Reduce 3
91	signal	Reduce 3
91	spawn	Reduce 3
91	then	Reduce 3
91	wait	Reduce 3
91	yield	Reduce 3
91	zero?	Reduce 3
91	$	Reduce 3
92	(	Reduce 4
92	)	Reduce 4
92	,	Reduce 4
92	-	Reduce 4
92	;	Reduce 4
92	[	Reduce 4
92	begin	Reduce 4
92	car	Reduce 4
92	cdr	Reduce 4
92	else	Reduce 4
92	end	Reduce 4
92	identifier	Reduce 4
92	if	Reduce 4
92	in	Reduce 4
92	integer_number	Reduce 4
92	let	Reduce 4
92	letrec	Reduce 4
92	mutex	Reduce 4
92	null?	Reduce 4
92	print	Reduce 4
92	proc	Reduce 4
92	set	Reduce 4
92	signal	Reduce 4
92	spawn	Reduce 4
92	then	Reduce 4
92	wait	Reduce 4
92	yield	Reduce 4
92	zero?	Reduce 4
92	$	Reduce 4
93	(	Reduce 6
93	)	Reduce 6
93	,	Reduce 6
93	-	Reduce 6
93	;	Reduce 6
93	[	Reduce 6
93	begin	Reduce 6
93	car	Reduce 6
93	cdr	Reduce 6
93	else	Reduce 6
93	end	Reduce 6
93	identifier	Reduce 6
93	if	Reduce 6
93	in	Reduce 6
93	integer_number	Reduce 6
93	let	Reduce 6
93	letrec	Reduce 6
93	mutex	Reduce 6
93	null?	Reduce 6
93	print	Reduce 6
93	proc	Reduce 6
93	set	Reduce 6
93	signal	Reduce 6
93	spawn	Reduce 6
93	then	Reduce 6
93	wait	Reduce 6
93	yield	Reduce 6
93	zero?	Reduce 6
93	$	Reduce 6
94	(	Shift 4
94	-	Shift 3
94	[	Shift 17
94	begin	Shift 10
94	car	Shift 20
94	cdr	Shift 21
94	identifier	Shift 6
94	if	Shift 5
94	integer_number	Shift 2
94	let	Shift 7
94	letrec	Shift 8
94	mutex	Shift 14
94	null?	Shift 19
94	print	Shift 22
94	proc	Shift 9
94	set	Shift 11
94	signal	Shift 16
94	spawn	Shift 12
94	wait	Shift 15
94	yield	Shift 13
94	zero?	Shift 18
95	identifier	Shift 29
95	in	Reduce 8
96	in	Reduce 9
